# version: '3.8'

services:
  hooks:
    build:
      context: ./hooks
      dockerfile: Dockerfile
    ports:
      - 3002:3002
    depends_on:
      - frontend

  backend:
    build:
      context: ./primary-backend
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    env_file:
      - ./primary-backend/.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      zookeeper:
        condition: service_healthy

  processor:
    build:
      context: ./processor
      dockerfile: Dockerfile
    networks:
      - kafka-net
    env_file:
      - ./processor/.env
    depends_on:
      kafka:
        condition: service_healthy

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    networks:
      - kafka-net
    depends_on:
      kafka:
        condition: service_healthy

networks:
  kafka-net:
    driver: bridge
